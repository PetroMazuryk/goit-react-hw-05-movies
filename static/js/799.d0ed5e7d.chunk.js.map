{"version":3,"file":"static/js/799.d0ed5e7d.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.js","components/Modal/Modal.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.6);\n`;\n\nexport const ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 10px;\n  width: 80%;\n  max-width: 800px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  position: relative;\n`;\n\nexport const CloseButton = styled.span`\n  position: absolute;\n  top: 2px;\n  right: 2px;\n  font-size: 30px;\n  cursor: pointer;\n  color: #333;\n\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { ModalWrapper, ModalContent, CloseButton } from './Modal.styled';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <ModalWrapper>\n      <ModalContent>\n        <CloseButton onClick={onClose}>&times;</CloseButton>\n        {children}\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\n\n\nexport default Modal;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  margin: 10px auto 20px;\n  max-width: 1200px;\n`;\n\nexport const MovieTextWrapper = styled.div`\n  gap: 20px;\n  padding: 0 50px;\n  width: 500px;\n`;\n\nexport const ImageContainer = styled.div`\nmin-width: 360px;\nheight: 540px;\n  overflow: hidden;\n  border-radius: 12px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 12px;\n  transition: transform 0.3s ease;\n  object-fit: cover;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const SubMenuList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0 auto;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const SubNavLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  color: #000;\n  display: block;\n  width: 100px;\n  background-color: lightblue;\n  border-radius: 10px;\n  padding: 6px 10px;\n  &.active {\n    color: red;\n  }\n  &:hover {\n    color: green;\n    transform: scale(1.05);\n  }\n`;\n\nexport const SubMenuItem = styled.li`\n  padding: 10px;\n`;\n\nexport const DetailsStyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  margin: 20px auto;\n\n  font-size: 20px;\n  background-color: lightblue;\n  color: red;\n  font-weight: 600;\n  width: 160px;\n  padding: 10px 20px;\n  border-radius: 12px;\n  opacity: 0.6;\n\n  &:hover {\n    opacity: 1;\n    transform: scale(1.05);\n  }\n`;\nexport const DetailsStyledLinkArrow = styled.span`\n  display: flex;\n  align-items: center;\n  margin-right: 16px;\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovieDetailsById, getMovieTrailerById } from 'services/themoviedb.api';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport Modal from '../../components/Modal/Modal'\nimport { isEmpty } from 'lodash';\n\nimport imgDefault from '../../imgDefault.jpg';\nimport { ImArrowLeft } from 'react-icons/im';\n\nimport {\n  DetailsStyledLink,\n  MovieInfoWrapper,\n  MovieTextWrapper,\n  ImageContainer,\n  Image,\n  SubMenuItem,\n  SubMenuList,\n  SubNavLink,\n  DetailsStyledLinkArrow,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [isTrailerOpen, setIsTrailerOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await getMovieDetailsById(movieId);\n        setMovieInfo(response);\n      } catch (error) {\n        setErrorMessage('Error fetching movie details');\n      }\n    };\n\n    fetchMovieDetails();\n    setTrailerUrl('');\n    setIsTrailerOpen(false);\n  }, [movieId]);\n\n  const handleImageClick = async () => {\n    try {\n      const trailer = await getMovieTrailerById(movieId);\n      setTrailerUrl(`https://www.youtube.com/embed/${trailer.key}`);\n      setIsTrailerOpen(true);\n    } catch (error) {\n      setErrorMessage('Error fetching trailer');\n    }\n  };\n\n  const closeTrailer = () => {\n    setIsTrailerOpen(false);\n    setTrailerUrl('');\n  };\n\n  const { poster_path, title, release_date, vote_average, overview, genres } = movieInfo;\n\n  return (\n    <>\n      {errorMessage && <div>{errorMessage}</div>}\n      {!isEmpty(movieInfo) && (\n        <>\n          <MovieInfoWrapper>\n            <MovieTextWrapper>\n              <h1>\n                {title}\n                {release_date && (\n                  <span style={{ padding: '0px 10px', color: 'tomato' }}>\n                    ({release_date.slice(0, 4)})\n                  </span>\n                )}\n              </h1>\n              <p>User score: {Math.round(vote_average * 10) + '%'}</p>\n              <p><b>Overview: </b>{overview}</p>\n              <p><b>Genres: </b>{genres.length > 0 ? genres.map(genre => genre.name).join('; ') : 'No genre info'}</p>\n            </MovieTextWrapper>\n            <ImageContainer>\n            <Image\n              src={!poster_path ? imgDefault : `https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n              width=\"360\"\n              onClick={handleImageClick}\n              style={{ cursor: 'pointer' }}\n            />\n            </ImageContainer>\n          \n          </MovieInfoWrapper>\n\n          <div>\n            <h2 style={{ textAlign: 'center', fontSize: 34 }}>Additional information</h2>\n            <SubMenuList>\n              <SubMenuItem><SubNavLink to=\"cast\">Cast</SubNavLink></SubMenuItem>\n              <SubMenuItem><SubNavLink to=\"reviews\">Review</SubNavLink></SubMenuItem>\n            </SubMenuList>\n\n            <Suspense fallback={<div>LOADING...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n\n<Modal isOpen={isTrailerOpen} onClose={closeTrailer}>\n<div style={{ borderRadius: '12px', overflow: 'hidden' }}>\n  <iframe\n    width=\"100%\"\n    height=\"400\"\n    src={trailerUrl}\n    frameBorder=\"0\"\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    allowFullScreen\n    title=\"Trailer\"\n  ></iframe>\n</div>\n      </Modal>\n\n      <DetailsStyledLink to={goBackHref.current}>\n        <DetailsStyledLinkArrow>\n          <ImArrowLeft />\n        </DetailsStyledLinkArrow>\n        Go back\n      </DetailsStyledLink>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["ModalWrapper","styled","ModalContent","CloseButton","isOpen","onClose","children","onClick","MovieInfoWrapper","MovieTextWrapper","ImageContainer","Image","SubMenuList","SubNavLink","NavLink","SubMenuItem","DetailsStyledLink","DetailsStyledLinkArrow","useState","movieInfo","setMovieInfo","trailerUrl","setTrailerUrl","isTrailerOpen","setIsTrailerOpen","errorMessage","setErrorMessage","movieId","useParams","location","useLocation","goBackHref","useRef","state","from","useEffect","fetchMovieDetails","getMovieDetailsById","response","handleImageClick","getMovieTrailerById","trailer","key","poster_path","title","release_date","vote_average","overview","genres","isEmpty","style","padding","color","slice","Math","round","length","map","genre","name","join","src","imgDefault","alt","width","cursor","textAlign","fontSize","to","Suspense","fallback","borderRadius","overflow","height","frameBorder","allow","allowFullScreen","current"],"sourceRoot":""}