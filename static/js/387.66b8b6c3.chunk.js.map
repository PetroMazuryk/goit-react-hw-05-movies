{"version":3,"file":"static/js/387.66b8b6c3.chunk.js","mappings":"2PAEaA,EAAcC,EAAAA,GAAAA,GAAH,wKAUXC,EAAWD,EAAAA,GAAAA,GAAH,8IAQRE,EAAUF,EAAAA,GAAAA,IAAH,2DAIPG,EAAcH,EAAAA,GAAAA,EAAH,wC,4BC6BxB,EA7Ca,WACX,OAAkCI,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAoBH,GAASI,MAAK,SAAAC,GAChCN,EAAaM,EAASC,KAAKC,OAAO,EAAG,GACtC,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACR,KAGF,8BACIF,EAAUa,QAKV,SAACnB,EAAD,UACGM,EAAUc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACxC,OACE,UAACtB,EAAD,YACE,SAACC,EAAD,CACEsB,IACGH,EAAD,0CAEuCA,GADnCI,EAGNC,IAAG,UAAKJ,GACRK,MAAM,WAER,SAACxB,EAAD,UAAcmB,KACd,SAACnB,EAAD,UAAcoB,MAXDH,EAclB,OArBH,SAAC,KAAD,mEA0BP,C,wLCjDYQ,EAAa5B,EAAAA,GAAAA,EAAH,mEAKV6B,EAAgB7B,EAAAA,GAAAA,GAAH,sBAEb8B,EAAe9B,EAAAA,GAAAA,EAAH,gDAIZ+B,EAAgB/B,EAAAA,GAAAA,EAAH,6DAKbgC,EAAahC,EAAAA,GAAAA,GAAH,oJ","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrapper = styled.ul`\n  width: 1200px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin: 10px auto;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  /* width: 20%; */\n`;\n\nexport const ImgItem = styled.img`\n  width: 200px;\n  height: 300px;\n`;\nexport const ImgItemText = styled.p`\n  margin: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCreditsById } from 'services/themoviedb.api';\nimport { CastItem, CastWrapper, ImgItem, ImgItemText } from './Cast.styled';\nimport { ReviewText } from '../Reviews/Reviews.styled';\n\nimport imgDefault from '../../imgDefault.jpg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      getMovieCreditsById(movieId).then(response => {\n        setMovieCast(response.cast.splice(0, 8));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {!movieCast.length ? (\n        <ReviewText>\n          Sorry! We do not have information about this movie.\n        </ReviewText>\n      ) : (\n        <CastWrapper>\n          {movieCast.map(({ id, profile_path, name, character }) => {\n            return (\n              <CastItem key={id}>\n                <ImgItem\n                  src={\n                    !profile_path\n                      ? imgDefault\n                      : `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  }\n                  alt={`${name}`}\n                  width=\"140px\"\n                />\n                <ImgItemText>{name}</ImgItemText>\n                <ImgItemText>{character}</ImgItemText>\n              </CastItem>\n            );\n          })}\n        </CastWrapper>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ReviewText = styled.p`\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const ReviewWrapper = styled.ul``;\n\nexport const ReviewAuthor = styled.b`\n  margin-bottom: 12px;\n`;\n\nexport const ReviewContent = styled.p`\n  width: 800px;\n  font-size: 18px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n"],"names":["CastWrapper","styled","CastItem","ImgItem","ImgItemText","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCreditsById","then","response","cast","splice","error","console","log","length","map","id","profile_path","name","character","src","imgDefault","alt","width","ReviewText","ReviewWrapper","ReviewAuthor","ReviewContent","ReviewItem"],"sourceRoot":""}