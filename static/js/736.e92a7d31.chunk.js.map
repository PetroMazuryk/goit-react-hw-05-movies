{"version":3,"file":"static/js/736.e92a7d31.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.js","components/Modal/Modal.jsx","images/icon-play.svg","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.6);\n`;\n\nexport const ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 10px;\n  width: 80%;\n  max-width: 800px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  position: relative;\n`;\n\nexport const CloseButton = styled.span`\n  position: absolute;\n  top: 2px;\n  right: 2px;\n  font-size: 30px;\n  cursor: pointer;\n  color: #333;\n\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { ModalWrapper, ModalContent, CloseButton } from './Modal.styled';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <ModalWrapper>\n      <ModalContent>\n        <CloseButton onClick={onClose}>&times;</CloseButton>\n        {children}\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\n\n\nexport default Modal;","var _style, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"katman_1\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    viewBox: \"0 0 512 512\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#E84B3C;}\\n\\t.st1{fill:#C03A29;}\\n\\t.st2{fill:#FFFFFF;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 256,\n    cy: 256,\n    r: 250\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M490.6,342.5c-0.5-0.5-0.9-1-1.4-1.4c-37-37-74.1-74.1-111.1-111.1c-3.1-3.1-6.4-5.7-10.2-7.9   c-14.6-8.7-29.2-17.5-43.8-26.3c-46.1-27.7-92.2-55.4-138.4-83.1c-8.9-5.4-18.4-7.3-28.7-5.4c-18.1,3.5-31.6,19.5-31.6,37.9   c0,74.2,0,148.5,0,222.7c0,10.5,3.8,19.6,11.2,27c36.7,36.8,73.5,73.5,110.2,110.3c0.3,0.3,0.5,0.5,0.8,0.7   c2.8,0.1,5.6,0.2,8.4,0.2C363.7,506,455.4,437.9,490.6,342.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st2\",\n    d: \"M163.9,406c-6.6,0-13.3-1.7-19.4-5.2c-12.5-7.1-19.9-19.8-19.9-34.2V145.4c0-14.3,7.5-27.1,19.9-34.2   c12.5-7.1,27.3-6.9,39.6,0.5l184.3,110.6c11.9,7.2,19.1,19.8,19.1,33.7c0,13.9-7.1,26.5-19.1,33.7L184.1,400.3   C177.8,404.1,170.8,406,163.9,406z M163.9,129.3c-2.7,0-5.4,0.7-7.9,2.1c-5.1,2.9-8.1,8.1-8.1,13.9v221.3c0,5.8,3,11,8.1,13.9   c5.1,2.9,11.1,2.8,16.1-0.2l184.3-110.6c4.9-3,7.8-8,7.8-13.7c0-5.8-2.8-10.8-7.8-13.7L172.1,131.6   C169.5,130.1,166.7,129.3,163.9,129.3z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconPlay);\nexport default __webpack_public_path__ + \"static/media/icon-play.7ab5e3455a0847cfdac977e8ffa39ed3.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport playIcon from '../../images/icon-play.svg';\n\nexport const ErrorMassage = styled.h2`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n\n  display: block;\n  justify-content: center;\n  text-align: center;\n  font-size: 28px;\n  background-color: aqua;\n  border: none;\n  border-radius: 10px;\n  padding: 8px 12px;\n  max-width: 600px;\n  white-space: pre-wrap;\n\n  animation-name: changeColor;\n  animation-duration: 3000ms;\n  animation-iteration-count: infinite;\n\n  @keyframes changeColor {\n    0% {\n      color: green;\n    }\n    50% {\n      color: orange;\n    }\n    100% {\n      color: green;\n    }\n  }\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  padding: 10px;\n  margin: 10px auto 20px;\n  max-width: 1200px;\n\n  @media screen and (min-width: 480px) {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n  }\n`;\n\nexport const MovieTextWrapper = styled.div`\n  text-align: center,\n    gap: 20px;\n\n  // @media screen and (min-width: 480px) {\n  //   width: 360px;\n  //   height: 540px;\n  // }\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n    height: 540px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  position: relative;\n  min-width: 310px;\n  height: 540px;\n  overflow: hidden;\n  border-radius: 12px;\n\n  &:hover::after {\n    pointer-events: none;\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    z-index: 11;\n    transform: translate(-50%, -50%);\n    width: 220px;\n    height: 220px;\n    background: url(${playIcon}) no-repeat center center;\n    background-size: contain;\n    transition: all 0.5s;\n  }\n\n  @media screen and (min-width: 480px) {\n    min-width: 260px;\n    height: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    min-width: 360px;\n    height: 540px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 12px;\n  transition: transform 0.3s ease;\n  object-fit: cover;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const SubMenuList = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0 auto;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const SubNavLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  color: #000;\n  display: block;\n  width: 100px;\n  background-color: lightblue;\n  border-radius: 10px;\n  padding: 6px 10px;\n  &.active {\n    color: red;\n  }\n  &:hover {\n    color: green;\n    transform: scale(1.05);\n  }\n`;\n\nexport const SubMenuItem = styled.li`\n  padding: 10px;\n`;\n\nexport const DetailsStyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  margin: 20px auto;\n\n  font-size: 20px;\n  background-color: lightblue;\n  color: red;\n  font-weight: 600;\n  width: 160px;\n  padding: 10px 20px;\n  border-radius: 12px;\n  opacity: 0.6;\n\n  &:hover {\n    opacity: 1;\n    transform: scale(1.05);\n  }\n`;\nexport const DetailsStyledLinkArrow = styled.span`\n  display: flex;\n  align-items: center;\n  margin-right: 16px;\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport {\n  getMovieDetailsById,\n  getMovieTrailerById,\n} from 'services/themoviedb.api';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport Modal from '../../components/Modal/Modal';\nimport { isEmpty } from 'lodash';\n\nimport imgDefault from '../../imgDefault.jpg';\nimport { ImArrowLeft } from 'react-icons/im';\n\nimport {\n  ErrorMassage,\n  DetailsStyledLink,\n  MovieInfoWrapper,\n  MovieTextWrapper,\n  ImageContainer,\n  Image,\n  SubMenuItem,\n  SubMenuList,\n  SubNavLink,\n  DetailsStyledLinkArrow,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [isTrailerOpen, setIsTrailerOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await getMovieDetailsById(movieId);\n        setMovieInfo(response);\n      } catch (error) {\n        setErrorMessage('Error fetching movie details');\n      }\n    };\n\n    fetchMovieDetails();\n    setTrailerUrl('');\n    setIsTrailerOpen(false);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      const timer = setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [errorMessage]);\n\n  const handleImageClick = async () => {\n    try {\n      const trailer = await getMovieTrailerById(movieId);\n      setTrailerUrl(`https://www.youtube.com/embed/${trailer.key}`);\n      setIsTrailerOpen(true);\n    } catch (error) {\n      setErrorMessage('Error fetching trailer ');\n    }\n  };\n\n  const closeTrailer = () => {\n    setIsTrailerOpen(false);\n    setTrailerUrl('');\n  };\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieInfo;\n\n  return (\n    <>\n      {errorMessage && <ErrorMassage>{errorMessage}</ErrorMassage>}\n      {!isEmpty(movieInfo) && (\n        <>\n          <MovieInfoWrapper>\n            <MovieTextWrapper>\n              <h1>\n                {title}\n                {release_date && (\n                  <span style={{ padding: '0px 10px', color: 'tomato' }}>\n                    ({release_date.slice(0, 4)})\n                  </span>\n                )}\n              </h1>\n              <p>User score: {Math.round(vote_average * 10) + '%'}</p>\n              <p>\n                <b>Overview: </b>\n                {overview}\n              </p>\n              <p>\n                <b>Genres: </b>\n                {genres.length > 0\n                  ? genres.map(genre => genre.name).join('; ')\n                  : 'No genre info'}\n              </p>\n            </MovieTextWrapper>\n            <ImageContainer>\n              <Image\n                src={\n                  !poster_path\n                    ? imgDefault\n                    : `https://image.tmdb.org/t/p/w500/${poster_path}`\n                }\n                alt={title}\n                width=\"360\"\n                onClick={handleImageClick}\n                style={{ cursor: 'pointer' }}\n              />\n            </ImageContainer>\n          </MovieInfoWrapper>\n\n          <div>\n            <h2 style={{ textAlign: 'center', fontSize: 34 }}>\n              Additional information\n            </h2>\n            <SubMenuList>\n              <SubMenuItem>\n                <SubNavLink to=\"cast\">Cast</SubNavLink>\n              </SubMenuItem>\n              <SubMenuItem>\n                <SubNavLink to=\"reviews\">Review</SubNavLink>\n              </SubMenuItem>\n            </SubMenuList>\n\n            <Suspense fallback={<div>LOADING...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n\n      <Modal isOpen={isTrailerOpen} onClose={closeTrailer}>\n        <div style={{ borderRadius: '12px', overflow: 'hidden' }}>\n          <iframe\n            width=\"100%\"\n            height=\"400\"\n            src={trailerUrl}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            title=\"Trailer\"\n          ></iframe>\n        </div>\n      </Modal>\n\n      <DetailsStyledLink to={goBackHref.current}>\n        <DetailsStyledLinkArrow>\n          <ImArrowLeft />\n        </DetailsStyledLinkArrow>\n        Go back\n      </DetailsStyledLink>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ModalWrapper","styled","ModalContent","CloseButton","isOpen","onClose","children","onClick","ErrorMassage","MovieInfoWrapper","MovieTextWrapper","ImageContainer","playIcon","Image","SubMenuList","SubNavLink","NavLink","SubMenuItem","DetailsStyledLink","DetailsStyledLinkArrow","useState","movieInfo","setMovieInfo","trailerUrl","setTrailerUrl","isTrailerOpen","setIsTrailerOpen","errorMessage","setErrorMessage","movieId","useParams","location","useLocation","goBackHref","useRef","state","from","useEffect","fetchMovieDetails","getMovieDetailsById","response","timer","setTimeout","clearTimeout","handleImageClick","getMovieTrailerById","trailer","key","poster_path","title","release_date","vote_average","overview","genres","isEmpty","style","padding","color","slice","Math","round","length","map","genre","name","join","src","imgDefault","alt","width","cursor","textAlign","fontSize","to","Suspense","fallback","borderRadius","overflow","height","frameBorder","allow","allowFullScreen","current"],"sourceRoot":""}